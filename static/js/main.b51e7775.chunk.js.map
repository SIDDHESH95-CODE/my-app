{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","className","role","type","msg","Navbar","mode","href","title","id","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","rows","placeholder","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","defaultProps","about","App","setMode","setAlert","message","setTimeout","body","backgroundColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b51e7775.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    return (\r\n             props.alert && <div className={`alert alert-success alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{props.alert.type}:</strong> {props.alert.msg}\r\n            </div>\r\n    )\r\n}\r\n","// component names are always should start with a capital letter.\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n// import { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n        <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              {/* <Link className=\"nav-link\" to=\"/about\">{props.about}</Link> */}\r\n            </li>\r\n          </ul>\r\n          <button type=\"button\" className=\"btn btn-primary mx-2\"></button>\r\n          <button type=\"button\" className=\"btn btn-secondary mx-2\"></button>\r\n          <button type=\"button\" className=\"btn btn-success mx-2\"></button>\r\n          <button type=\"button\" className=\"btn btn-danger mx-2\"></button>\r\n          <button type=\"button\" className=\"btn btn-warning mx-2\"></button>\r\n          <button type=\"button\" className=\"btn btn-info mx-2\"></button>\r\n                                                                {/* JS ternery oprator */}\r\n            <div className={`form-check form-switch text-${props.mode === 'light'?'dark':'light'}`}>\r\n              <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode} id=\"flexSwitchCheckDefault\"/>\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n            </div>\r\n          {/* <form className=\"d-flex\">\r\n            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n            <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button>\r\n          </form> */}\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  about: PropTypes.string\r\n};\r\n\r\n// Specifies the default values for props:\r\nNavbar.defaultProps = {\r\n  title: 'Set title here',\r\n  about: 'About text here'\r\n  // about: 'About us'\r\n};\r\n","import React, { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    \r\n    const [text, setText] = useState(\"\");\r\n    // text = \"New Text\";      // Wrong way to enter the state text\r\n    // setText(\"New Text\");    // Correct way to enter the state text\r\n\r\n    const clickedToUp = ()=> {\r\n        // console.log(\"Clicked on button\");\r\n        // console.log(\"Clicked on button\" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to uppercase!\", \"Success\")\r\n    }\r\n    const clickedToLo = ()=> {\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to lowercase!\", \"Success\")\r\n    }\r\n   \r\n    const clickedToClear = ()=> {\r\n        let newText = (\"\");\r\n        setText(newText);\r\n        props.showAlert(\"Text cleared!\", \"Success\");\r\n    }\r\n    \r\n    const changedUp = (event)=>{\r\n        // console.log(\"Value has changed\")\r\n        setText(event.target.value);    // To able to type in your textarea.\r\n    }\r\n    \r\n    const clickedToCopy = ()=> {\r\n        var text = document.getElementById('myBox');\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Copied to clickboard!\", \"Success\")\r\n    }\r\n\r\n    const handleExtraSpaces = ()=> {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Extra spaces removed!\", \"Success\")\r\n    }\r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color: props.mode === 'light'?'black':'white'}}>\r\n            <h2>{props.heading}</h2>\r\n            <div className=\"mb-3\">\r\n            <textarea className=\"form-control\" value={text} onChange={changedUp} id=\"myBox\" rows=\"8\" placeholder=\"Type your text here\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-1\" onClick={clickedToUp}>Convert To Uppercase</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={clickedToLo}>Convert To Lowercase</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={clickedToClear}>Clear Text</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={clickedToCopy}>Copy Text</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n        </div>\r\n\r\n        <div className=\"container my-3\" style={{color: props.mode === 'light'?'black':'white'}}>\r\n            <h2>Your text summary</h2>\r\n            <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n            <p>{0.008 * text.split(\" \").length} Minutes to read</p>\r\n            <h3><u>Preview</u></h3>\r\n            <p><small><em>{text.length>0 ? text : 'Enter somthing in the textbox above to preview it here..'}</em></small></p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","// import logo from './logo.svg';\nimport React, { useState } from 'react';\nimport './App.css';\nimport Alert from './components/Alert';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n// import About from './components/About';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n// } from \"react-router-dom\";\n\n\n\nfunction App() {\n  const [mode, setMode] = useState('light');  // Whether dark mode is enabled or not.\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type)=>{\n    setAlert({\n        msg: message,\n        type: type\n      })\n      setTimeout(() => {\n        setAlert(null)\n      }, 2000);\n    }\n    \n\n  const toggleMode = ()=> {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#2c3e50';\n      showAlert(\"Dark mode has been enable\", \"Success\");\n      document.title = 'TextUtils - Dark Mode';\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"Success\");\n      document.title = 'TextUtils - Light Mode';\n    }\n  }\n\n\n  return (\n    //This is called jsx element.\n    <>\n      {/* <Router> */}\n      <Navbar title=\"My app\" about=\"About Us\" mode={mode} toggleMode={toggleMode}/>\n      {/* for the default props  */}\n      {/* <Navbar/> */}\n      {/* <Navbar title=\"My app\"/> */}\n\n      <Alert alert={alert}/>\n        <div className=\"container my-3\">\n        {/* <Switch> */}\n            {/* exact defines the exact path of that page & not page in between. */}\n            {/* <Route exact path=\"/about\">\n              <About />\n            </Route>\n            <Route exact path=\"/\"> */}\n              <TextForm showAlert={showAlert} heading=\"Enter the text to analyze..\" mode={mode}/>\n            {/* </Route>\n          </Switch> */}\n\n        </div>\n    {/* <div classNameName=\"blank\">Lovely</div> */}\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}